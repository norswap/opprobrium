// SPDX-License-Identifier: BSD-3-Clause-Clear
pragma solidity ^0.8.0;

// DO NOT EDIT â€” AUTO-GENERATED BY packages/data/buildings/buildings.mjs

import {BuildingType, BuildingLevelInfo} from "./Buildings.sol";

abstract contract BuildingsData {
    // Maps (building type, level) to building level info.
    mapping(BuildingType => mapping(uint32 => BuildingLevelInfo)) internal levelInfo;

    constructor() {
        // Mineral Mine

        levelInfo[BuildingType.MINERAL_MINE][0] = BuildingLevelInfo({
            costMineral: 0,
            costGas: 0,
            costDeuterium: 0,
            productionRate: 30,
            constructionTime: 0
        });
        levelInfo[BuildingType.MINERAL_MINE][1] = BuildingLevelInfo({
            costMineral: 60,
            costGas: 15,
            costDeuterium: 0,
            productionRate: 33,
            constructionTime: 0
        });
        levelInfo[BuildingType.MINERAL_MINE][2] = BuildingLevelInfo({
            costMineral: 90,
            costGas: 22,
            costDeuterium: 0,
            productionRate: 72,
            constructionTime: 0
        });
        levelInfo[BuildingType.MINERAL_MINE][3] = BuildingLevelInfo({
            costMineral: 135,
            costGas: 33,
            costDeuterium: 0,
            productionRate: 119,
            constructionTime: 0
        });
        levelInfo[BuildingType.MINERAL_MINE][4] = BuildingLevelInfo({
            costMineral: 202,
            costGas: 50,
            costDeuterium: 0,
            productionRate: 175,
            constructionTime: 0
        });

        // Gas Extractor

        levelInfo[BuildingType.GAS_EXTRACTOR][0] = BuildingLevelInfo({
            costMineral: 0,
            costGas: 0,
            costDeuterium: 0,
            productionRate: 0,
            constructionTime: 0
        });
        levelInfo[BuildingType.GAS_EXTRACTOR][1] = BuildingLevelInfo({
            costMineral: 28,
            costGas: 24,
            costDeuterium: 0,
            productionRate: 22,
            constructionTime: 0
        });
        levelInfo[BuildingType.GAS_EXTRACTOR][2] = BuildingLevelInfo({
            costMineral: 76,
            costGas: 38,
            costDeuterium: 0,
            productionRate: 48,
            constructionTime: 0
        });
        levelInfo[BuildingType.GAS_EXTRACTOR][3] = BuildingLevelInfo({
            costMineral: 122,
            costGas: 61,
            costDeuterium: 0,
            productionRate: 79,
            constructionTime: 0
        });
        levelInfo[BuildingType.GAS_EXTRACTOR][4] = BuildingLevelInfo({
            costMineral: 196,
            costGas: 98,
            costDeuterium: 0,
            productionRate: 117,
            constructionTime: 0
        });

        // Deuterium Synthesizer

        levelInfo[BuildingType.DEUTERIUM_SYNTHESIZER][0] = BuildingLevelInfo({
            costMineral: 0,
            costGas: 0,
            costDeuterium: 0,
            productionRate: 0,
            constructionTime: 0
        });
        levelInfo[BuildingType.DEUTERIUM_SYNTHESIZER][1] = BuildingLevelInfo({
            costMineral: 225,
            costGas: 75,
            costDeuterium: 0,
            productionRate: 11,
            constructionTime: 0
        });
        levelInfo[BuildingType.DEUTERIUM_SYNTHESIZER][2] = BuildingLevelInfo({
            costMineral: 337,
            costGas: 112,
            costDeuterium: 0,
            productionRate: 24,
            constructionTime: 0
        });
        levelInfo[BuildingType.DEUTERIUM_SYNTHESIZER][3] = BuildingLevelInfo({
            costMineral: 506,
            costGas: 169,
            costDeuterium: 0,
            productionRate: 39,
            constructionTime: 0
        });
        levelInfo[BuildingType.DEUTERIUM_SYNTHESIZER][4] = BuildingLevelInfo({
            costMineral: 759,
            costGas: 253,
            costDeuterium: 0,
            productionRate: 59,
            constructionTime: 0
        });
    }
}
